plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlinx-serialization'
    id 'kotlin-kapt'
    id("com.apollographql.apollo3").version("3.5.0")
    id "io.gitlab.arturbosch.detekt"
}

apollo {
    packageName.set("cz.minarik.alzatest")
    generateKotlinModels.set(true)
}

android {
    compileSdk 33

    defaultConfig {
        applicationId "cz.minarik.alzatest"
        minSdk 21
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '11'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.3.0'
        kotlinCompilerVersion kotlin_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.5.0'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.5.1'
    implementation 'androidx.activity:activity-compose:1.5.1'
    testImplementation 'junit:junit:'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    implementation 'javax.inject:javax.inject:1@jar'

    //compose navigation
    implementation("androidx.navigation:navigation-compose:2.5.1")

    //Compose
    implementation "androidx.compose.animation:animation:$compose_version"
    implementation "androidx.compose.foundation:foundation:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.runtime:runtime:$compose_version"
    implementation "androidx.compose.ui:ui:$compose_version"

    def koin_version = '3.1.5'
    // Koin for Android
    implementation "io.insert-koin:koin-android:$koin_version"
    implementation "io.insert-koin:koin-androidx-compose:$koin_version"

    //retrofit + okhttp
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.okhttp3:okhttp:4.9.3'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.3'
    implementation("com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:0.8.0")
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.2"

    //Coil
    implementation("io.coil-kt:coil-compose:2.1.0")
    implementation "io.coil-kt:coil-svg:1.3.2"

    //Swipe Refresh layout for Jetpack Compose
    implementation "com.google.accompanist:accompanist-swiperefresh:0.24.0-alpha"

    //DataStore
    implementation("androidx.datastore:datastore-preferences:1.0.0") \

    // apollo
    def apollo = "3.5.0"
    implementation("com.apollographql.apollo3:apollo-runtime:$apollo")
    implementation "com.apollographql.apollo:apollo-coroutines-support:2.5.12"

    // paging
    def paging_version = "3.1.1"
    implementation "androidx.paging:paging-runtime-ktx:$paging_version"
    implementation "androidx.paging:paging-compose:1.0.0-alpha16"

}

apollo {
    generateKotlinModels.set(true)
}