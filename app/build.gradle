plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlinx-serialization'
    id 'kotlin-kapt'
    id("com.apollographql.apollo3").version("3.7.3")
    id "io.gitlab.arturbosch.detekt"
}

apollo {
    packageName.set("cz.minarik.rickandmorty")
    generateKotlinModels.set(true)
}

android {
    compileSdk 33

    defaultConfig {
        applicationId "cz.minarik.rickandmorty"
        minSdk 26
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '11'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.4.4'
        kotlinCompilerVersion kotlin_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }

    testOptions {
        unitTests.all {
            it.useJUnitPlatform()
        }
    }

    packagingOptions {
        resources.excludes.add("META-INF/*")
    }

    namespace 'cz.minarik.rickandmorty'
}

dependencies {

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.6.0'
    implementation 'com.google.android.material:material:1.8.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.5.1'
    implementation 'androidx.activity:activity-compose:1.7.0'
    implementation 'javax.inject:javax.inject:1@jar'

    // tests
    testImplementation "io.kotest:kotest-runner-junit5-jvm:4.6.4"
    testImplementation "io.mockk:mockk:1.13.4"
    androidTestImplementation "io.mockk:mockk-android:1.13.4"
    androidTestImplementation "io.kotest:kotest-runner-junit5-jvm:4.6.4"
    androidTestImplementation "io.kotest:kotest-assertions-core-jvm:4.6.4"
    androidTestImplementation 'androidx.test:rules:1.5.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation "androidx.test:core-ktx:1.5.0"
    androidTestImplementation "androidx.test:core:1.5.0"

    //compose navigation
    implementation("androidx.navigation:navigation-compose:2.5.3")

    //Compose
    def composeBom = platform('androidx.compose:compose-bom:2023.03.00')
    implementation composeBom
    androidTestImplementation composeBom
    // Android Studio Preview support
    implementation 'androidx.compose.ui:ui-tooling-preview'
    debugImplementation 'androidx.compose.ui:ui-tooling'

    def koin_version = '3.1.5'
    // Koin for Android
    implementation "io.insert-koin:koin-android:$koin_version"
    implementation "io.insert-koin:koin-androidx-compose:$koin_version"

    //retrofit + okhttp
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.okhttp3:okhttp:4.10.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.10.0'
    implementation("com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:0.8.0")
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.4.1"

    //Coil
    implementation("io.coil-kt:coil-compose:2.1.0")
    implementation "io.coil-kt:coil-svg:1.3.2"

    //Swipe Refresh layout for Jetpack Compose
    implementation "com.google.accompanist:accompanist-swiperefresh:0.24.0-alpha"

    //DataStore
    implementation("androidx.datastore:datastore-preferences:1.0.0")      \

    // apollo
    def apollo = "3.7.3"
    implementation("com.apollographql.apollo3:apollo-runtime:$apollo")
    implementation "com.apollographql.apollo:apollo-coroutines-support:2.5.14"

    // paging
    def paging_version = "3.1.1"
    implementation "androidx.paging:paging-runtime-ktx:$paging_version"
    implementation "androidx.paging:paging-compose:1.0.0-alpha18"

    implementation 'com.jakewharton.timber:timber:5.0.1'

    def accompanist_version = "0.28.0"
    implementation "com.google.accompanist:accompanist-pager:$accompanist_version"
    implementation "com.google.accompanist:accompanist-pager-indicators:$accompanist_version"
}

apollo {
    generateKotlinModels.set(true)
}
